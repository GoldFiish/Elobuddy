//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NebulaTeemo.Resources {
    using System;
    
    
    /// <summary>
    ///   지역화된 문자열 등을 찾기 위한 강력한 형식의 리소스 클래스입니다.
    /// </summary>
    // 이 클래스는 ResGen 또는 Visual Studio와 같은 도구를 통해 StronglyTypedResourceBuilder
    // 클래스에서 자동으로 생성되었습니다.
    // 멤버를 추가하거나 제거하려면 .ResX 파일을 편집한 다음 /str 옵션을 사용하여 ResGen을
    // 다시 실행하거나 VS 프로젝트를 다시 빌드하십시오.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Lang_En {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Lang_En() {
        }
        
        /// <summary>
        ///   이 클래스에서 사용하는 캐시된 ResourceManager 인스턴스를 반환합니다.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NebulaTeemo.Resources.Lang_En", typeof(Lang_En).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   이 강력한 형식의 리소스 클래스를 사용하여 모든 리소스 조회에 대한 현재 스레드의 CurrentUICulture
        ///   속성을 재정의합니다.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Teemo range - [ AA : 500 ] [ Q : 680 ] [ R : 400 / 650 / 900 ]과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Attack_Range_Exp {
            get {
                return ResourceManager.GetString("Attack_Range_Exp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   [ Ignite ] Use과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Combo_Ignite {
            get {
                return ResourceManager.GetString("Combo_Ignite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If mana is higher than [ n% ], [ R ] is used 과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Combo_Q_Mana {
            get {
                return ResourceManager.GetString("Combo_Q_Mana", resourceCulture);
            }
        }
        
        /// <summary>
        ///   [ Q ] Use과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Combo_Q_Text {
            get {
                return ResourceManager.GetString("Combo_Q_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If [ Noxious Trap ] is higher than [ n% ], [ R ] is used 과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Combo_R_Count {
            get {
                return ResourceManager.GetString("Combo_R_Count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   [ R ] Use과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Combo_R_Text {
            get {
                return ResourceManager.GetString("Combo_R_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If mana is higher than [ n% ], [ W ] is used 과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Combo_W_Mana {
            get {
                return ResourceManager.GetString("Combo_W_Mana", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If enemy is [ n ] ~ [720 ] range, [ W ] is used과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Combo_W_Range {
            get {
                return ResourceManager.GetString("Combo_W_Range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   [ W ] Use과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Combo_W_Text {
            get {
                return ResourceManager.GetString("Combo_W_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If mana is higher than [ n% ], [ Q ] is used 과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Harass_Q_Mana {
            get {
                return ResourceManager.GetString("Harass_Q_Mana", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If enemy is in [ n ] range, [ Q ] is used과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Harass_Q_Range {
            get {
                return ResourceManager.GetString("Harass_Q_Range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   [ Q ] Use과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Harass_Q_Text {
            get {
                return ResourceManager.GetString("Harass_Q_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If [ Noxious Trap ] is higher than [ n% ], [ R ] is used 과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Harass_R_Count {
            get {
                return ResourceManager.GetString("Harass_R_Count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If mana is higher than [ n% ], [ R ] is used 과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Harass_R_Mana {
            get {
                return ResourceManager.GetString("Harass_R_Mana", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If enemy is in [ n ] range, [ R ] is used과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Harass_R_Range {
            get {
                return ResourceManager.GetString("Harass_R_Range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   [ R ] Use과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Harass_R_Text {
            get {
                return ResourceManager.GetString("Harass_R_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If mana is higher than [ n% ], [ W ] is used 과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Harass_W_Mana {
            get {
                return ResourceManager.GetString("Harass_W_Mana", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If enemy is in [ n ] range, [ W ] is used과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Harass_W_Range {
            get {
                return ResourceManager.GetString("Harass_W_Range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   [ W ] Use과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Harass_W_Text {
            get {
                return ResourceManager.GetString("Harass_W_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Blade of the Ruined King과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Item_A_BK {
            get {
                return ResourceManager.GetString("Item_A_BK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If player hp is lower than [ n% ], [ Blade of the Ruined King ] is used과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Item_A_BK_Hp {
            get {
                return ResourceManager.GetString("Item_A_BK_Hp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bilgewater Cutlass과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Item_A_BW {
            get {
                return ResourceManager.GetString("Item_A_BW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Hextech Gunblade과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Item_A_Hex {
            get {
                return ResourceManager.GetString("Item_A_Hex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Youmuu&apos;s Ghostblade과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Item_A_Youmuu {
            get {
                return ResourceManager.GetString("Item_A_Youmuu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Blind과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Item_Buff_Blind {
            get {
                return ResourceManager.GetString("Item_Buff_Blind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Charm과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Item_Buff_Charm {
            get {
                return ResourceManager.GetString("Item_Buff_Charm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fear과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Item_Buff_Fear {
            get {
                return ResourceManager.GetString("Item_Buff_Fear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ploymorph과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Item_Buff_Ploymorph {
            get {
                return ResourceManager.GetString("Item_Buff_Ploymorph", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Poisons과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Item_Buff_Poisons {
            get {
                return ResourceManager.GetString("Item_Buff_Poisons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Silence과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Item_Buff_Silence {
            get {
                return ResourceManager.GetString("Item_Buff_Silence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Slow과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Item_Buff_Slow {
            get {
                return ResourceManager.GetString("Item_Buff_Slow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Snare과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Item_Buff_Snare {
            get {
                return ResourceManager.GetString("Item_Buff_Snare", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Stun과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Item_Buff_Stun {
            get {
                return ResourceManager.GetString("Item_Buff_Stun", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Supression과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Item_Buff_Supression {
            get {
                return ResourceManager.GetString("Item_Buff_Supression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Taunt과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Item_Buff_Taunt {
            get {
                return ResourceManager.GetString("Item_Buff_Taunt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Quicksilver Sash, Mercurial Scimitar cast speed - [ /ms ]과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Item_CastDelay {
            get {
                return ResourceManager.GetString("Item_CastDelay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Quicksilver Sash과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Item_D_QSS {
            get {
                return ResourceManager.GetString("Item_D_QSS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mercurial Scimitar과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Item_D_Scimitar {
            get {
                return ResourceManager.GetString("Item_D_Scimitar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If player hp is lower than [ n% ], [ Zhonya&apos;s Hourglass ] is used과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Item_D_Zhonyas_Hp {
            get {
                return ResourceManager.GetString("Item_D_Zhonyas_Hp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Zhonya&apos;s Hourglass과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Item_D_Zhonyas_Text {
            get {
                return ResourceManager.GetString("Item_D_Zhonyas_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Select to remove the buff과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Item_Debuff_Text {
            get {
                return ResourceManager.GetString("Item_Debuff_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ※ Only!! It works in combo mode.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Item_Exp_0 {
            get {
                return ResourceManager.GetString("Item_Exp_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ※ Allways activate.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Item_Exp_1 {
            get {
                return ResourceManager.GetString("Item_Exp_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Just no menu - [ Bilgewater Cutlass ] [ Youmuu&apos;s Ghostblade ] [ Hextech Gunblade ]과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Item_Item_Text {
            get {
                return ResourceManager.GetString("Item_Item_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ignite과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Item_S_Ignite {
            get {
                return ResourceManager.GetString("Item_S_Ignite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If mana is higher than [ n% ], [ Q ] is used 과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Jungle_Q_Mana {
            get {
                return ResourceManager.GetString("Jungle_Q_Mana", resourceCulture);
            }
        }
        
        /// <summary>
        ///   [ Q ] Use과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Jungle_Q_Text {
            get {
                return ResourceManager.GetString("Jungle_Q_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If [ Noxious Trap ] is higher than [ n% ], [ R ] is used 과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Jungle_R_Count {
            get {
                return ResourceManager.GetString("Jungle_R_Count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If mana is higher than [ n% ], [ R ] is used 과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Jungle_R_Mana {
            get {
                return ResourceManager.GetString("Jungle_R_Mana", resourceCulture);
            }
        }
        
        /// <summary>
        ///   [ R ] Use과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Jungle_R_Text {
            get {
                return ResourceManager.GetString("Jungle_R_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Jungle style과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Jungle_Style {
            get {
                return ResourceManager.GetString("Jungle_Style", resourceCulture);
            }
        }
        
        /// <summary>
        ///   0 : Starting Big Monster과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Jungle_Style_Exp_1 {
            get {
                return ResourceManager.GetString("Jungle_Style_Exp_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   1 : Starting Mini Monster kill after [ Q ] use to Big Monster과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Jungle_Style_Exp_2 {
            get {
                return ResourceManager.GetString("Jungle_Style_Exp_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   [ Q ] Use - Siege minion과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Lane_Q_Big {
            get {
                return ResourceManager.GetString("Lane_Q_Big", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If [ Noxious Trap ] is higher than [ n% ], [ R ] is used 과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Lane_R_Count {
            get {
                return ResourceManager.GetString("Lane_R_Count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Lane_R_KillableCount {
            get {
                return ResourceManager.GetString("Lane_R_KillableCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If mana is higher than [ n% ], [ R ] is used 과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Lane_R_Mana {
            get {
                return ResourceManager.GetString("Lane_R_Mana", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Number of poisoning Minions &gt;= [ n ], [ R ] is used과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Lane_R_PoisonCount {
            get {
                return ResourceManager.GetString("Lane_R_PoisonCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   [ R ] Use과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Lane_R_Text {
            get {
                return ResourceManager.GetString("Lane_R_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Attact style과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Main_Attack_Style {
            get {
                return ResourceManager.GetString("Main_Attack_Style", resourceCulture);
            }
        }
        
        /// <summary>
        ///   0 : [ Q ] → AA → AA과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Main_Attack_Style_Exp_0 {
            get {
                return ResourceManager.GetString("Main_Attack_Style_Exp_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   1 : AA → [ Q ] → AA ( Jungle Teemo )과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Main_Attack_Style_Exp_1 {
            get {
                return ResourceManager.GetString("Main_Attack_Style_Exp_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Select Language -&gt; Press [ F5 ] key과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Main_Language_Exp {
            get {
                return ResourceManager.GetString("Main_Language_Exp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Language ( 언어 )과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Main_Language_Select {
            get {
                return ResourceManager.GetString("Main_Language_Select", resourceCulture);
            }
        }
        
        /// <summary>
        ///   [ Nebula ] Teemo - 6.13.0.0과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Main_Text_0 {
            get {
                return ResourceManager.GetString("Main_Text_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If you like this addon, hope Upvote click or donation. 과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Main_Text_1 {
            get {
                return ResourceManager.GetString("Main_Text_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Donated amount will be used for the development of better addon. Thank you.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Main_Text_2 {
            get {
                return ResourceManager.GetString("Main_Text_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto [ R ]과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Misc_AutoR {
            get {
                return ResourceManager.GetString("Misc_AutoR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enemy state : [ Zhonya&apos;s / Recall / Konck up / Stun / Supression / Snare / Charm / Taunt ]과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Misc_AutoR_Exp {
            get {
                return ResourceManager.GetString("Misc_AutoR_Exp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   [ Q ] Range - [ Siege minion ]과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Misc_Draw_ComboQ {
            get {
                return ResourceManager.GetString("Misc_Draw_ComboQ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   [ Q ] Range과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Misc_Draw_Q {
            get {
                return ResourceManager.GetString("Misc_Draw_Q", resourceCulture);
            }
        }
        
        /// <summary>
        ///   [ R ] Range과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Misc_Draw_R {
            get {
                return ResourceManager.GetString("Misc_Draw_R", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Draw Setting과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Misc_Draw_Text {
            get {
                return ResourceManager.GetString("Misc_Draw_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   [ Virtual Range ] Use - Use when you want to know the distance.과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Misc_Draw_Virtual {
            get {
                return ResourceManager.GetString("Misc_Draw_Virtual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Line 2과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Misc_Draw_Virtual_Max {
            get {
                return ResourceManager.GetString("Misc_Draw_Virtual_Max", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Line 1과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Misc_Draw_Virtual_Min {
            get {
                return ResourceManager.GetString("Misc_Draw_Virtual_Min", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Kill steal - [ Ignite]과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Misc_Ignite {
            get {
                return ResourceManager.GetString("Misc_Ignite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Jungle steal - [ Q / E / R ] [ Epic Monster ]과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Misc_JungleSteal {
            get {
                return ResourceManager.GetString("Misc_JungleSteal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Kill steal - [ Q / E / R ]과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Misc_KillSteal {
            get {
                return ResourceManager.GetString("Misc_KillSteal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Steal Setting과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Misc_KillSteal_Text {
            get {
                return ResourceManager.GetString("Misc_KillSteal_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Classic Teemo과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Misc_Skin_Id_0 {
            get {
                return ResourceManager.GetString("Misc_Skin_Id_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Happy Elf Teemo과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Misc_Skin_Id_1 {
            get {
                return ResourceManager.GetString("Misc_Skin_Id_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recon Teemo과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Misc_Skin_Id_2 {
            get {
                return ResourceManager.GetString("Misc_Skin_Id_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Badger Teemo과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Misc_Skin_Id_3 {
            get {
                return ResourceManager.GetString("Misc_Skin_Id_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Astronaut Teemo과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Misc_Skin_Id_4 {
            get {
                return ResourceManager.GetString("Misc_Skin_Id_4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cottontail Teemo과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Misc_Skin_Id_5 {
            get {
                return ResourceManager.GetString("Misc_Skin_Id_5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Super Teemo과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Misc_Skin_Id_6 {
            get {
                return ResourceManager.GetString("Misc_Skin_Id_6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Panda Teemo과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Misc_Skin_Id_7 {
            get {
                return ResourceManager.GetString("Misc_Skin_Id_7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Omega Squad Teemo과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Misc_Skin_Id_8 {
            get {
                return ResourceManager.GetString("Misc_Skin_Id_8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Skin과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Misc_Skin_Select {
            get {
                return ResourceManager.GetString("Misc_Skin_Select", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Skin Setting과(와) 유사한 지역화된 문자열을 찾습니다.
        /// </summary>
        internal static string Misc_Skin_Text {
            get {
                return ResourceManager.GetString("Misc_Skin_Text", resourceCulture);
            }
        }
    }
}
